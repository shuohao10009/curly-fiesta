import tkinter as tk
from tkinter import ttk, filedialog, messagebox
import json
import os

class ProjectionFileGenerator:
    def __init__(self, root):
        self.root = root
        self.root.title("Minecraft 投影文件生成器")
        
        # 创建标签和输入框
        tk.Label(root, text="投影名称:").grid(row=0, column=0, padx=5, pady=5, sticky=tk.W)
        self.name_entry = tk.Entry(root, width=50)
        self.name_entry.grid(row=0, column=1, padx=5, pady=5)

        tk.Label(root, text="作者:").grid(row=1, column=0, padx=5, pady=5, sticky=tk.W)
        self.author_entry = tk.Entry(root, width=50)
        self.author_entry.grid(row=1, column=1, padx=5, pady=5)

        tk.Label(root, text="描述:").grid(row=2, column=0, padx=5, pady=5, sticky=tk.W)
        self.description_entry = tk.Entry(root, width=50)
        self.description_entry.grid(row=2, column=1, padx=5, pady=5)

        # 方块/物品选择
        tk.Label(root, text="选择方块/物品:").grid(row=3, column=0, padx=5, pady=5, sticky=tk.W)
        self.item_listbox = tk.Listbox(root, selectmode=tk.MULTIPLE, height=5, width=50)
        self.item_listbox.grid(row=3, column=1, padx=5, pady=5)

        # 添加一些示例方块/物品
        items = ["diamond", "gold_ingot", "iron_ingot", "coal", "wood", "stone", "dirt", "grass_block"]
        for item in items:
            self.item_listbox.insert(tk.END, item)

        # 保存按钮
        self.save_button = tk.Button(root, text="保存投影文件", command=self.save_projection_file)
        self.save_button.grid(row=4, column=0, columnspan=2, pady=10)

    def save_projection_file(self):
        # 获取用户输入
        name = self.name_entry.get()
        author = self.author_entry.get()
        description = self.description_entry.get()

        if not name or not author or not description:
            messagebox.showwarning("警告", "请填写所有必填项！")
            return

        # 获取选中的方块/物品
        selected_items = [self.item_listbox.get(i) for i in self.item_listbox.curselection()]
        if not selected_items:
            messagebox.showwarning("警告", "请选择至少一个方块/物品！")
            return

        # 构建投影文件内容
        projection_data = {
            "name": name,
            "author": author,
            "description": description,
            "items": selected_items
        }

        # 保存文件
        file_path = filedialog.asksaveasfilename(defaultextension=".json", filetypes=[("JSON Files", "*.json")])
        if file_path:
            with open(file_path, 'w') as f:
                json.dump(projection_data, f, indent=4)
            messagebox.showinfo("成功", f"投影文件已保存到: {file_path}")

# 主程序
if __name__ == "__main__":
    root = tk.Tk()
    app = ProjectionFileGenerator(root)
    root.mainloop()
